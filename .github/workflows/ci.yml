name: CI

on:
  push:
    branches: ["**"]
  pull_request:

permissions:
  contents: read
  packages: write

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build API image (no push)
        uses: docker/build-push-action@v6
        with:
          context: ./api
          load: true
          tags: contactos-api:ci

      - name: Start stack (db + api)
        run: |
          docker compose up -d db
          # espera a que estÃ© healthy
          for i in $(seq 1 60); do
            if docker inspect --format='{{json .State.Health.Status}}' $(docker compose ps -q db) | grep -q healthy; then
              echo "DB healthy"; break
            fi
            echo "esperando DB..."; sleep 2
          done
          # levanta API usando la imagen construida
          # si tu compose ya tiene build en api, esto lo sobreescribe con la imagen local contactos-api:ci
          docker compose up -d api

      - name: Wait for API health
        run: |
          for i in $(seq 1 60); do
            if curl -sf http://localhost:8000/health > /dev/null; then
              echo "API OK"; break
            fi
            echo "esperando API..."; sleep 2
          done

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements-dev.txt

      - name: Run tests
        run: pytest -q

  push-image:
    if: github.ref == 'refs/heads/main'
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set image tags
        id: meta
        run: |
          SHA=${{ github.sha }}
          echo "sha_tag=${SHA::12}" >> $GITHUB_OUTPUT
          echo "latest_tag=latest"   >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push to GHCR
        uses: docker/build-push-action@v6
        with:
          context: ./api
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/contactos-api:${{ steps.meta.outputs.sha_tag }}
            ghcr.io/${{ github.repository_owner }}/contactos-api:${{ steps.meta.outputs.latest_tag }}
